{"ast":null,"code":"import axios from 'axios';\nimport { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport { LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction likePostAPI(data) {\n  return axios.patch('/post/${data}/like');\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: LIKE_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete('/post/${data}/like');\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: UNLIKE_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete('/api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLikePosts() {\n  yield takeLatest(LIKE_POSTS_REQUEST, likePosts);\n}\n\nfunction* watchUnlikePosts() {\n  yield takeLatest(UNLIKE_POSTS_REQUEST, unlikePosts);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLikePost), fork(watchUnlikePost), fork(watchAddPost), fork(watchLoadPosts), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/sagas/post.js"],"names":["axios","all","delay","fork","put","takeLatest","throttle","call","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","likePostAPI","data","patch","likePost","action","result","type","LIKE_POST_TO_ME","id","err","console","error","response","unlikePostAPI","delete","unlikePost","UNLIKE_POST_TO_ME","loadPostsAPI","get","loadPosts","addPostAPI","post","content","addPost","removePostAPI","removePost","addCommentAPI","postId","addComment","watchLikePosts","LIKE_POSTS_REQUEST","likePosts","watchUnlikePosts","UNLIKE_POSTS_REQUEST","unlikePosts","watchLoadPosts","watchAddPost","watchRemovePost","watchAddComment","postSaga","watchLikePost","watchUnlikePost"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\n\nimport {\n  LIKE_POST_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n} from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction likePostAPI(data) {\n  return axios.patch('/post/${data}/like');\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: LIKE_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete('/post/${data}/like');\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: UNLIKE_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', { content : data });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete('/api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLikePosts() {\n  yield takeLatest(LIKE_POSTS_REQUEST, likePosts);\n}\n\nfunction* watchUnlikePosts() {\n  yield takeLatest(UNLIKE_POSTS_REQUEST, unlikePosts);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchLikePost),\n    fork(watchUnlikePost),\n    fork(watchAddPost),\n    fork(watchLoadPosts),\n    fork(watchRemovePost),\n    fork(watchAddComment),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}