{"ast":null,"code":"import React, { useCallback, useState, useRef } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport PropTypes from 'prop-types';\nimport Link from \"next/dist/client/link\";\n\nvar PostCardContent = function PostCardContent(_ref) {\n  var postData = _ref.postData;\n  return console.log(postData) // <div>\n  //     {postData.split(/(#[^\\s#]+)/g).map((v) => {\n  //       if(v.match(/(#[^\\s#]+)/)) {\n  //           return <Link href={`/hashtag/${v.slice(1)}`}><a>{v}</a></Link>\n  //       }\n  //       return v;\n  //     })}\n  // </div>\n  ;\n};\n\n_c = PostCardContent;\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired\n};\nexport default PostCardContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCardContent\");","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/components/PostCardContent.js"],"names":["React","useCallback","useState","useRef","Button","Form","Input","useDispatch","useSelector","addPost","PropTypes","Link","PostCardContent","postData","console","log","propTypes","string","isRequired"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SACpBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADoB,CAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAToB;AAAA,CAAxB;;KAAMD,e;AAYNA,eAAe,CAACI,SAAhB,GAA4B;AAAEH,EAAAA,QAAQ,EAAEH,SAAS,CAACO,MAAV,CAAiBC;AAA7B,CAA5B;AAEA,eAAeN,eAAf","sourcesContent":["import React, { useCallback, useState, useRef } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport PropTypes from 'prop-types'\nimport Link from \"next/dist/client/link\";\n\nconst PostCardContent = ({ postData }) => (\n    console.log(postData)\n    // <div>\n    //     {postData.split(/(#[^\\s#]+)/g).map((v) => {\n    //       if(v.match(/(#[^\\s#]+)/)) {\n    //           return <Link href={`/hashtag/${v.slice(1)}`}><a>{v}</a></Link>\n    //       }\n    //       return v;\n    //     })}\n    // </div>\n)\n\nPostCardContent.propTypes = { postData: PropTypes.string.isRequired }\n\nexport default PostCardContent"]},"metadata":{},"sourceType":"module"}