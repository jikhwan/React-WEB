{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'HonestJJ'\n    },\n    content: \"My first 게시물 #해시태그 #익스프레스\",\n    Images: [{\n      src: 'https://w.namu.la/s/f897e95aa25785a1b54cb0c9f328b37cb05449a8c9f815507198ef79cc6cc4a1a68a52522f629c9025adde63b28493fc63f442b085f37acdd3431e4f12568c77c47abdbe3e6452eb6c1313753ce195ee'\n    }, {\n      src: 'https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FeqqBpc%2Fbtq7bDXOxzg%2Fm9K4sPYXsOme3nkPVK2wkk%2Fimg.png'\n    }, {\n      src: 'https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FeqqBpc%2Fbtq7bDXOxzg%2Fm9K4sPYXsOme3nkPVK2wkk%2Fimg.png'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'Jake'\n      },\n      content: '리액트 1'\n    }, {\n      User: {\n        nickname: 'Honest JJ'\n      },\n      content: '리액트 2'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPost = {\n  type: ADD_POST_REQUEST //data,\n\n};\nexport const addComment = {\n  type: ADD_COMMENT_REQUEST //data,\n\n};\nconst dummyPost = {\n  id: 2,\n  content: '더미 데이터1',\n  User: {\n    id: 1,\n    nickname: 'HonestJJ'\n  },\n  Images: [],\n  Comments: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","type","addComment","dummyPost","reducer","state","action","error"],"mappings":"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","sourcesContent":["export const initialState = {\n    mainPosts: [{\n        id: 1,\n        User: {\n            id: 1,\n            nickname: 'HonestJJ',\n        },\n        content: \"My first 게시물 #해시태그 #익스프레스\",\n        Images: [{\n                src: 'https://w.namu.la/s/f897e95aa25785a1b54cb0c9f328b37cb05449a8c9f815507198ef79cc6cc4a1a68a52522f629c9025adde63b28493fc63f442b085f37acdd3431e4f12568c77c47abdbe3e6452eb6c1313753ce195ee',\n            },  {\n                src: 'https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FeqqBpc%2Fbtq7bDXOxzg%2Fm9K4sPYXsOme3nkPVK2wkk%2Fimg.png',\n            }, {\n                src: 'https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FeqqBpc%2Fbtq7bDXOxzg%2Fm9K4sPYXsOme3nkPVK2wkk%2Fimg.png',\n            }, ],\n        Comments: [{\n            User: {\n                nickname: 'Jake'\n            },\n                content: '리액트 1',\n            }, {\n            User: {\n                nickname: 'Honest JJ'\n            },\n                content: '리액트 2'\n            }]\n    }],\n    imagePaths: [],\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n}\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const addPost = {\n    type: ADD_POST_REQUEST,\n    //data,\n}\n\nexport const addComment = {\n    type: ADD_COMMENT_REQUEST,\n    //data,\n}\n\nconst dummyPost = {\n    id:2,\n    content: '더미 데이터1',\n    User: {\n        id:1,\n        nickname: 'HonestJJ',\n    },\n    Images: [],\n    Comments: [],\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST_REQUEST:\n            return {\n                ...state,\n                addPostLoading: true,\n                addPostDone: false,\n                addPostError: null,\n            }\n        case ADD_POST_SUCCESS:    \n            return {\n                ...state,\n                mainPosts: [dummyPost, ...state.mainPosts],\n                addPostLoading: false,\n                addPostDone: true,\n            }\n        case ADD_POST_FAILURE: \n        return{\n            ...state,\n            addPostLoading: false,\n            addPostError: action.error,\n        }\n        case ADD_COMMENT_REQUEST:\n            return {\n                ...state,\n                addCommentLoading: true,\n                addCommentDone: false,\n                addCommentError: null,\n            }\n        case ADD_COMMENT_SUCCESS:    \n            return {\n                ...state,\n                addCommentLoading: false,\n                addCommentDone: true,\n            }\n        case ADD_COMMENT_FAILURE: \n        return{\n            ...state,\n            addCommentLoading: false,\n            addCommentError: action.error,\n        }\n        default:\n            return state;\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}