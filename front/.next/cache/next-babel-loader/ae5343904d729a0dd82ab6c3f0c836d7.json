{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport user from './user';\nimport post from './post';\nconst initialState = {\n  user: {},\n  post: {}\n}; //(이전상태, 액션) => 다음상태\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/reducers/index.js"],"names":["HYDRATE","user","post","initialState","rootReducer","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,YAAY,GAAG;AACjBF,EAAAA,IAAI,EAAE,EADW;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB,C,CASA;;AACA,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,OAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,6CACOD,KADP,GACiBC,MAAM,CAACI,OADxB;;AAGA;AACI,+BACOL,KADP;AAPZ;AAWH,CAZD;;AAcA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\"\nimport user from './user'\nimport post from './post'\n\nconst initialState = {\n    user: {\n\n    },\n    post: {\n        \n    }\n}\n\n//(이전상태, 액션) => 다음상태\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type){\n        case HYDRATE: \n            console.log('HYDRATE', action);\n            return {\n                ...state, ...action.payload\n            }\n            default:\n                return {\n                    ...state,\n                }\n    }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}