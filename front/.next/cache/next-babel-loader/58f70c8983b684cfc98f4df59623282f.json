{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport user from './user';\nimport post from './post';\nimport { combineReducers } from \"redux\";\nvar initialState = {\n  user: {},\n  post: {}\n}; //(이전상태, 액션) => 다음상태\n\nvar rootReducer = combineReducer({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/reducers/index.js"],"names":["HYDRATE","user","post","combineReducers","initialState","rootReducer","combineReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,IAAMC,YAAY,GAAG;AACjBH,EAAAA,IAAI,EAAE,EADW;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB,C,CASA;;AACA,IAAMG,WAAW,GAAGC,cAAc,CAAC;AAChCC,EAAAA,KAAK,EAAE,iBAAwB;AAAA,QAAvBC,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AAC9B,YAAQA,MAAM,CAACC,IAAf;AACI,WAAKV,OAAL;AACIW,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CACOD,KADP,GACiBC,MAAM,CAACI,OADxB;;AAGA;AACI,eAAOL,KAAP;AAPZ;AASC,GAX8B;AAY/BP,EAAAA,IAAI,EAAJA,IAZ+B;AAa/BC,EAAAA,IAAI,EAAJA;AAb+B,CAAD,CAAlC;AAgBA,eAAeG,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\"\nimport user from './user'\nimport post from './post'\nimport { combineReducers } from \"redux\"\n\nconst initialState = {\n    user: {\n\n    },\n    post: {\n        \n    }\n}\n\n//(이전상태, 액션) => 다음상태\nconst rootReducer = combineReducer({\n   index: (state = {}, action) => {\n    switch (action.type){\n        case HYDRATE: \n            console.log('HYDRATE', action);\n            return {\n                ...state, ...action.payload\n            }\n            default:\n                return state;\n        }   \n    },\n    user,\n    post,\n})\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}