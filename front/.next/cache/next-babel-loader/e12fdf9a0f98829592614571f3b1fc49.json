{"ast":null,"code":"import { all, fork, call, take, put, delay, debounce, throttle, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, ADD_COMMENT_REQUEST, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS, REMOVE_POST_REQUEST } from '../reducers/post';\nimport { ADD_POST_TO_ME } from '../reducers/user';\nimport shortid from 'shortid';\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    console.log('addPost saga');\n    yield delay(1000);\n    const id = shortid.generate(); // const result = yield call(addPostAPI, action.data)\n\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/sagas/post.js"],"names":["all","fork","call","take","put","delay","debounce","throttle","takeLatest","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","ADD_COMMENT_REQUEST","REMOVE_POST_FAILURE","REMOVE_POST_SUCCESS","REMOVE_POST_REQUEST","ADD_POST_TO_ME","shortid","addCommentAPI","data","post","postId","addComment","action","type","err","response","removePostAPI","removePost","addPostAPI","addPost","console","log","id","generate","content","error","watchAddPost","watchRemovePost","watchAddComment","postSaga"],"mappings":"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","sourcesContent":["import {all, fork, call, take, put, delay, debounce, throttle, takeLatest} from 'redux-saga/effects'\nimport axios from 'axios'\nimport { \n        ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, \n        ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, ADD_COMMENT_REQUEST,\n        REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS, REMOVE_POST_REQUEST } from '../reducers/post'\nimport { ADD_POST_TO_ME } from '../reducers/user';\nimport shortid from 'shortid';\n\nfunction addCommentAPI(data) {\n    return axios.post(`/api/post/${data.postId}/comment`, data)\n}\n\nfunction* addComment(action) {\n    try {\n      // const result = yield call(addCommentAPI, action.data);\n      yield delay(1000);\n      yield put({\n        type: ADD_COMMENT_SUCCESS,\n        data: action.data,\n      });\n    } catch (err) {\n      yield put({\n        type: ADD_COMMENT_FAILURE,\n        data: err.response.data,\n      });\n    }\n  }\n\n  function removePostAPI(data) {\n    return axios.post(`/api/post/${data.postId}/comment`, data)\n}\n\nfunction* removePost(action) {\n    try {\n      // const result = yield call(addCommentAPI, action.data);\n      yield delay(1000);\n      yield put({\n        type: ADD_COMMENT_SUCCESS,\n        data: action.data,\n      });\n    } catch (err) {\n      yield put({\n        type: ADD_COMMENT_FAILURE,\n        data: err.response.data,\n      });\n    }\n  }\n\nfunction addPostAPI(data) {\n    return axios.post('/api/post', data)\n}\n\nfunction* addPost(action) {\n    try {\n        console.log('addPost saga')\n        yield delay(1000)\n        const id = shortid.generate()\n        // const result = yield call(addPostAPI, action.data)\n        yield put({\n            type: ADD_POST_SUCCESS,\n            data:{\n                id,\n                content: action.data,\n            }\n        });\n        yield put({\n            type: ADD_POST_TO_ME,\n            data: id,\n        })\n    } catch(err) {\n        yield put({\n            type: ADD_POST_FAILURE,\n            error: err.response.data,\n        })\n    }\n}\n\nfunction* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST, addPost)\n}\nfunction* watchRemovePost(){\n    yield takeLatest(REMOVE_POST_REQUEST, removePost)\n}\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment)\n}\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost),\n        fork(watchRemovePost),\n        fork(watchAddComment),\n    ])\n}"]},"metadata":{},"sourceType":"module"}