{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nvar configureStore = function configureStore() {\n  var middlewares = [];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'JAKE'\n  });\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,QAAQ,GAAG,QACfL,OAAO,CAACD,eAAe,MAAf,SAAmBK,WAAnB,CAAD,CADQ,GAEfH,mBAAmB,CAACF,eAAe,MAAf,SAAmBK,WAAnB,CAAD,CAFrB;AAGA,MAAME,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUG,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAE,iBAAP;AAA0BC,IAAAA,IAAI,EAAC;AAA/B,GAAf;AACA,SAAOH,KAAP;AACH,CARD;;AAUA,IAAMI,OAAO,GAAGb,aAAa,CAACM,cAAD,EAAiB;AAACQ,EAAAA,KAAK;AAAN,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport reducer from '../reducers' \n\nconst configureStore = () => {\n    const middlewares = [];\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares))\n    const store = createStore(reducer, enhancer);\n    store.dispatch({type: 'CHANGE_NICKNAME', data:'JAKE'})\n    return store;\n}\n\nconst wrapper = createWrapper(configureStore, {debug: process.env.NODE_ENV === 'development'})\n\nexport default wrapper"]},"metadata":{},"sourceType":"module"}