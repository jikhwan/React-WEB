{"ast":null,"code":"var _jsxFileName = \"/Users/honest/Downloads/\\u1100\\u1162\\u1107\\u1161\\u11AF/7. react-nodebird/prepare/front/components/CommentForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from \"antd\";\nimport { useCallback, useState, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Dispatch } from \"react\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/components/CommentForm.js"],"names":["Button","Form","Input","useCallback","useState","useEffect","useInput","PropTypes","useDispatch","useSelector","Dispatch","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,EAAE,GAAGN,WAAW,CAAEO,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEI,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAwCX,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAAzD;AACA,QAAM,CAACQ,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDjB,QAAQ,CAAC,EAAD,CAAnE;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGc,cAAH,EAAkB;AACdI,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAMA,QAAMK,eAAe,GAAGrB,WAAW,CAAC,MAAM;AACtCsB,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACE,EAAjB,EAAqBM,WAArB;AACAP,IAAAA,QAAQ,CAAC;AACLa,MAAAA,IAAI,EAAEhB,mBADD;AAELiB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAER,WAAX;AAAwBS,QAAAA,MAAM,EAAEjB,IAAI,CAACE,EAArC;AAAyCgB,QAAAA,MAAM,EAAEhB;AAAjD;AAFD,KAAD,CAAR;AAIH,GANkC,EAMhC,CAACM,WAAD,EAAcN,EAAd,CANgC,CAAnC;AAQA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAC;AAA/B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEZ,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,MAAC,MAAD;AACI,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC,EAA3C;AAA+CC,MAAAA,MAAM,EAAE;AAAvD,KADX;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,QAAQ,EAAC,QAHb;AAII,IAAA,OAAO,EAAEhB,iBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,CADJ,CADJ;AAaH,CAjCD;;AAmCAR,WAAW,CAACyB,SAAZ,GAAwB;AACpBxB,EAAAA,IAAI,EAAEN,SAAS,CAAC+B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAe3B,WAAf","sourcesContent":["import { Button, Form, Input } from \"antd\";\nimport { useCallback, useState, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Dispatch } from \"react\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({ post }) => {\n    const dispatch = useDispatch();\n    const id = useSelector((state) => state.user.me?.id);\n    const { addCommentDone, addCommentLoading } = useSelector((state) => state.post)\n    const [commentText, onChangeCommentText, setCommentText] = useInput('')\n\n    useEffect(() => {\n        if(addCommentDone){\n            setCommentText('')\n        }\n    }, [addCommentDone])\n\n    const onSubmitComment = useCallback(() => {\n        console.log(post.id, commentText)\n        dispatch({\n            type: ADD_COMMENT_REQUEST,\n            data: { content: commentText, postId: post.id, userId: id }\n        })\n    }, [commentText, id])\n\n    return (\n        <Form onFinish={onSubmitComment}>\n            <Form.Item style={{ position: 'relative', margin:0 }}>\n            <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\n            <Button \n                style={{ position: 'absolute', right: 0, bottom: -40, zIndex: 1 }} \n                type='primary' \n                htmlType=\"submit\"\n                loading={addCommentLoading}\n                >삐약</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired,\n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}