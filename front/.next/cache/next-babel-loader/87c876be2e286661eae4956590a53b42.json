{"ast":null,"code":"import { ShrinkOutlined } from \"@ant-design/icons\";\nimport produce from 'immer';\nimport shortId from 'shortid'; //import faker from \"faker\";\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'HonestJJ'\n    },\n    content: '첫 번째 게시글',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요~'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.image()\n      }],\n      Comments: [{\n        User: {\n          id: shortId.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }]\n    };\n  });\n};\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: 'HonestJJ'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'HonestJJ'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/reducers/post.js"],"names":["ShrinkOutlined","produce","shortId","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","removePostLoading","removePostDone","removePostError","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","generateDummyPost","number","Array","fill","map","faker","name","findName","lorem","paragraph","image","sentence","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","loadPostsLoading","loadPostsDone","loadPostsError","concat","hasMorePosts","length","error","unshift","filter","v","post","find","postId"],"mappings":"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","sourcesContent":["import { ShrinkOutlined } from \"@ant-design/icons\";\nimport produce from 'immer';\nimport shortId from 'shortid';\n//import faker from \"faker\";\n\n\nexport const initialState = {\n    mainPosts: [{\n      id: 1,\n      User: {\n        id: 1,\n        nickname: 'HonestJJ',\n      },\n      content: '첫 번째 게시글',\n      Images: [{\n        id : shortId.generate(),\n        src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n      }, {\n        src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n      }, {\n        src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n      }],\n      Comments: [{\n        id : shortId.generate(),\n        User: {\n          id : shortId.generate(),\n          nickname: 'nero',\n        },\n        content: '우와 개정판이 나왔군요~',\n      }, {\n        id : shortId.generate(), \n        User: {\n          id : shortId.generate(),\n          nickname: 'hero',\n        },\n        content: '얼른 사고싶어요~',\n      }]\n    }],\n    imagePaths: [],\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n}\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const generateDummyPost = (number) => Array(number).fill().map(() => ({\n    id: shortId.generate(),\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName(),\n    },\n    content: faker.lorem.paragraph(),\n    Images: [{\n      src: faker.image.image(),\n    }],\n    Comments: [{\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName(),\n      },\n      content: faker.lorem.sentence(),\n    }],\n  }));\n  \nexport const addPost = (data) => ({\n    type: ADD_POST_REQUEST,\n    data,\n})\n\nexport const addComment = (data) => ({\n    type: ADD_COMMENT_REQUEST,\n    data,\n})\n\nconst dummyPost = (data) => ({\n    id: data.id,\n    content: data.content,\n    User: {\n        id:1,\n        nickname: 'HonestJJ',\n    },\n    Images: [],\n    Comments: [],\n})\n\nconst dummyComment = (data) => ({\n    id : shortId.generate(),\n    content: data,\n    User: {\n        id:1,\n        nickname: 'HonestJJ',\n    },\n})\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}