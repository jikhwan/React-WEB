{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchSingUp),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, call, take, put, delay, debounce, throttle, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction loginAPI() {\n  return axios.post('/api/login', data);\n}\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS // data: result.data,\n\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/signup');\n}\n\nfunction signUp() {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS // data: result.data,\n\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchSingUp() {\n  return _regeneratorRuntime.wrap(function watchSingUp$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchSingUp)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/sagas/user.js"],"names":["logIn","logOut","signUp","watchLogIn","watchLogOut","watchSingUp","userSaga","all","fork","call","take","put","delay","debounce","throttle","takeLatest","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","loginAPI","post","data","action","type","error","response","logOutAPI","signUpAPI"],"mappings":"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","sourcesContent":["import {all, fork, call, take, put, delay, debounce, throttle, takeLatest} from 'redux-saga/effects'\nimport axios from 'axios'\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \n         LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, \n         SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user'\n\nfunction loginAPI() {\n    return axios.post('/api/login', data)\n}\n\nfunction* logIn(action) {\n    try {\n        yield delay(1000)\n        // const result = yield call(loginAPI, action.data)\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: action.data,\n        });\n    } catch(err) {\n        yield put({\n            type: LOG_IN_FAILURE,\n            error: err.response.data,\n        })\n    }\n}\n\nfunction logOutAPI() {\n    return axios.post('/api/logout')\n}\n\nfunction* logOut() {\n    try {\n        yield delay(1000)\n        // const result = yield call(logOutAPI)\n        yield put({\n            type: LOG_OUT_SUCCESS,\n            // data: result.data,\n        });\n    } catch(err) {\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err.response.data,\n        })\n    }\n}\n\nfunction signUpAPI() {\n    return axios.post('/api/signup')\n}\n\nfunction* signUp() {\n    try {\n        yield delay(1000)\n        // const result = yield call(logOutAPI)\n        yield put({\n            type: SIGN_UP_SUCCESS,\n            // data: result.data,\n        });\n    } catch(err) {\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: err.response.data,\n        })\n    }\n}\n\nfunction* watchLogIn(){\n    yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut(){\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSingUp(){\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchSingUp),\n    ])\n\n}"]},"metadata":{},"sourceType":"module"}