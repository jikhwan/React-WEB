{"ast":null,"code":"var _jsxFileName = \"/Users/honest/Downloads/\\u1100\\u1162\\u1107\\u1161\\u11AF/7. react-nodebird/prepare/front/components/PostImages.js\";\nvar __jsx = React.createElement;\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, PlusOutlined, RetweetOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Popover } from \"antd\";\nimport React, { useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport ImagesZoom from \"./ImagesZoom/Index\";\n\nconst PostImages = ({\n  images\n}) => {\n  const {\n    0: showImagesZoom,\n    1: setShowImagesZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  });\n\n  if (images.length === 1) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      role: \"presentation\",\n      style: {\n        width: '50%',\n        display: 'inline-block'\n      },\n      src: `http://localhost:3065/%{images[0].src}`,\n      alt: images[0].src,\n      onClick: onZoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 30\n      }\n    }));\n  }\n\n  if (images.length === 2) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      role: \"presentation\",\n      style: {\n        width: '50%',\n        display: 'inline-block'\n      },\n      src: `http://localhost:3065/%{images[0].src}`,\n      onClick: onZoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), __jsx(\"img\", {\n      role: \"presentation\",\n      style: {\n        width: '50%',\n        display: 'inline-block'\n      },\n      src: `http://localhost:3065/%{images[1].src}`,\n      onClick: onZoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 32\n      }\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    role: \"presentation\",\n    style: {\n      height: '30%',\n      display: 'inline-block'\n    },\n    width: \"30%\",\n    src: `http://localhost:3065/%{images[0].src}`,\n    alt: images[0].src,\n    onClick: onZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    role: \"presentation\",\n    style: {\n      display: 'inline-block',\n      height: '50%',\n      textAlign: 'center',\n      verticalAlign: 'middle'\n    },\n    width: \"30%\",\n    onClick: onZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBC84\\uAE30\")), showImagesZoom && __jsx(ImagesZoom, {\n    images: images,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }\n  }));\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object)\n};\nexport default PostImages;","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/components/PostImages.js"],"names":["EllipsisOutlined","HeartOutlined","MessageOutlined","PlusOutlined","RetweetOutlined","Button","Card","Popover","React","useState","useCallback","useSelector","PropTypes","Avatar","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","width","display","src","height","textAlign","verticalAlign","propTypes","arrayOf","object"],"mappings":"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","sourcesContent":["import { EllipsisOutlined, HeartOutlined, MessageOutlined, PlusOutlined, RetweetOutlined } from \"@ant-design/icons\"\nimport { Button, Card, Popover, } from \"antd\"\nimport React, { useState,useCallback } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport PropTypes from 'prop-types'\nimport Avatar from \"antd/lib/avatar/avatar\"\nimport ImagesZoom from \"./ImagesZoom/Index\"\n\nconst PostImages = ({ images }) => {\n    const [showImagesZoom, setShowImagesZoom] = useState(false)\n    const onZoom = useCallback(() => {\n        setShowImagesZoom(true);\n    }, [])\n    const onClose = useCallback(() => {\n        setShowImagesZoom(false)\n    })\n\n    if (images.length === 1) {\n    return (\n        <> \n          <img role=\"presentation\" style={{ width: '50%', display: 'inline-block' }} src={`http://localhost:3065/%{images[0].src}`} alt={images[0].src} onClick={onZoom} />\n          {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n        </>\n    )\n    }\n    if (images.length === 2) {\n        return (\n            <> \n            <img role=\"presentation\" style={{ width: '50%', display: 'inline-block' }} src={`http://localhost:3065/%{images[0].src}`} onClick={onZoom} />\n            <img role=\"presentation\" style={{ width: '50%', display: 'inline-block' }} src={`http://localhost:3065/%{images[1].src}`} onClick={onZoom} />\n            {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n            </>\n        )\n    }\n    return (\n    <> \n        <div>\n            <img role=\"presentation\" style={{ height: '30%', display: 'inline-block' }} width=\"30%\" src={`http://localhost:3065/%{images[0].src}`} alt={images[0].src} onClick={onZoom} />\n            <div\n                role=\"presentation\"\n                style={{ display: 'inline-block', height: '50%', textAlign: 'center', verticalAlign: 'middle' }}\n                width=\"30%\"\n                onClick={onZoom}\n                >\n                <PlusOutlined />\n                <br />\n                {images.length -1}\n                개의 사진 더버기\n            </div>\n        </div>\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n        </>\n        )  \n}\n\nPostImages.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default PostImages"]},"metadata":{},"sourceType":"module"}