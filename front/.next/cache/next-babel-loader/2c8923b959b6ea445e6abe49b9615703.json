{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nvar loggerMiddleWare = function loggerMiddleWare(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [createSagaMiddleware, loggerMiddleWare];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'JAKE'\n  });\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","reducer","createSagaMiddleware","rootSaga","loggerMiddleWare","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","type","data","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA4B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACvEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACH,KAHoD;AAAA,GAA5B;AAAA,CAAzB;;AAKA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,MAAMW,WAAW,GAAG,CAACX,oBAAD,EAAuBE,gBAAvB,CAApB;AACA,MAAMU,QAAQ,GAAG,QACff,OAAO,CAACD,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CADQ,GAEfb,mBAAmB,CAACF,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CAFrB;AAGA,MAAME,KAAK,GAAGlB,WAAW,CAACI,OAAD,EAAUa,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACV,QAAN,CAAe;AAACW,IAAAA,IAAI,EAAE,iBAAP;AAA0BC,IAAAA,IAAI,EAAC;AAA/B,GAAf;AACAF,EAAAA,KAAK,CAACG,QAAN,GAAiBN,cAAc,CAACO,GAAf,CAAmBhB,QAAnB,CAAjB;AACA,SAAOY,KAAP;AACH,CAVD;;AAYA,IAAMK,OAAO,GAAGxB,aAAa,CAACe,cAAD,EAAiB;AAACU,EAAAA,KAAK;AAAN,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport reducer from '../reducers' \nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from '../sagas'\n\nconst loggerMiddleWare = ({ dispatch, getState }) => (next) => (action) => {\n    console.log(action);\n    return next(action);\n}\n\nconst configureStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [createSagaMiddleware, loggerMiddleWare];\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares))\n    const store = createStore(reducer, enhancer);\n    store.dispatch({type: 'CHANGE_NICKNAME', data:'JAKE'})\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n    return store;\n}\n\nconst wrapper = createWrapper(configureStore, {debug: process.env.NODE_ENV === 'development'})\n\nexport default wrapper"]},"metadata":{},"sourceType":"module"}