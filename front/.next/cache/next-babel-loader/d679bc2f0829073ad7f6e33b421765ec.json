{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggingIn: false,\n  //로그인 시도 중\n  isLoggingOut: false,\n  //로그아웃 시도 중\n  isLoggedIn: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n}; // export const loginSuccessAction = (data) => {\n//     return {\n//         type: 'LOG_IN_SUCCESS',\n//         data,\n//     }\n// }\n// export const loginFailureAction = (data) => {\n//     return {\n//         type: 'LOG_IN_FAILURE',\n//         data,\n//     }\n// }\n\nexport const logoutRequestAction = data => {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n}; // export const logoutSuccessAction = (data) => {\n//     return {\n//         type: 'LOG_OUT_SUCCESS',\n//     }\n// }\n// export const logoutFailureAction = (data) => {\n//     return {\n//         type: 'LOG_OUT_FAILURE',\n//     }\n// }\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case 'LOG_IN_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'HonestJJ'\n        })\n      });\n\n    case 'LOG_IN_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case 'LOG_OUT_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case 'LOG_OUT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case 'LOG_OUT_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggingOut","isLoggedIn","me","signUpData","loginData","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","nickname"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,WAAW,EAAE,KADW;AACJ;AACpBC,EAAAA,YAAY,EAAE,KAFU;AAEH;AACrBC,EAAAA,UAAU,EAAE,KAHY;AAIxBC,EAAAA,EAAE,EAAE,IAJoB;AAKxBC,EAAAA,UAAU,EAAE,EALY;AAMxBC,EAAAA,SAAS,EAAE;AANa,CAArB;AAUP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAE,gBADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM,C,CAOP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,mBAAmB,GAAIF,IAAD,IAAU;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAK,gBAAL;AACI,6CACWG,KADX;AAEQX,QAAAA,WAAW,EAAE;AAFrB;;AAIJ,SAAK,gBAAL;AACI,6CACWW,KADX;AAEQX,QAAAA,WAAW,EAAE,KAFrB;AAGQE,QAAAA,UAAU,EAAE,IAHpB;AAIQC,QAAAA,EAAE,kCAAMS,MAAM,CAACL,IAAb;AAAmBM,UAAAA,QAAQ,EAAE;AAA7B;AAJV;;AAMJ,SAAK,gBAAL;AACI,6CACWF,KADX;AAEQX,QAAAA,WAAW,EAAE,KAFrB;AAGQE,QAAAA,UAAU,EAAE;AAHpB;;AAKJ,SAAK,iBAAL;AACI,6CACWS,KADX;AAEQV,QAAAA,YAAY,EAAE;AAFtB;;AAIJ,SAAK,iBAAL;AACI,6CACWU,KADX;AAEQV,QAAAA,YAAY,EAAE,KAFtB;AAGQC,QAAAA,UAAU,EAAE,KAHpB;AAIQC,QAAAA,EAAE,EAAE;AAJZ;;AAMJ,SAAK,iBAAL;AACI,6CACWQ,KADX;AAEQV,QAAAA,YAAY,EAAE;AAFtB;;AAIJ;AACI,aAAOU,KAAP;AArCR;AAuCH,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    isLoggingIn: false, //로그인 시도 중\n    isLoggingOut: false, //로그아웃 시도 중\n    isLoggedIn: false,\n    me: null,\n    signUpData: {},\n    loginData: {},\n}\n\n\nexport const loginRequestAction = (data) => {\n    return {\n        type: 'LOG_IN_REQUEST',\n        data,\n    }\n}\n\n// export const loginSuccessAction = (data) => {\n//     return {\n//         type: 'LOG_IN_SUCCESS',\n//         data,\n//     }\n// }\n\n// export const loginFailureAction = (data) => {\n//     return {\n//         type: 'LOG_IN_FAILURE',\n//         data,\n//     }\n// }\n\nexport const logoutRequestAction = (data) => {\n    return {\n        type: 'LOG_OUT_REQUEST',\n    }\n}\n\n// export const logoutSuccessAction = (data) => {\n//     return {\n//         type: 'LOG_OUT_SUCCESS',\n//     }\n// }\n// export const logoutFailureAction = (data) => {\n//     return {\n//         type: 'LOG_OUT_FAILURE',\n//     }\n// }\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOG_IN_REQUEST':\n            return {\n                    ...state,\n                    isLoggingIn: true,\n            }\n        case 'LOG_IN_SUCCESS':\n            return {\n                    ...state,\n                    isLoggingIn: false,\n                    isLoggedIn: true,\n                    me: {...action.data, nickname: 'HonestJJ'},                \n            }\n        case 'LOG_IN_FAILURE':\n            return {\n                    ...state,\n                    isLoggingIn: false,\n                    isLoggedIn: false,\n            }\n        case 'LOG_OUT_REQUEST':\n            return {\n                    ...state,\n                    isLoggingOut: true\n            }\n        case 'LOG_OUT_SUCCESS':\n            return {\n                    ...state,\n                    isLoggingOut: false,\n                    isLoggedIn: false,\n                    me: null,\n            }\n        case 'LOG_OUT_FAILURE':\n            return {\n                    ...state,\n                    isLoggingOut: false,\n            } \n        default:\n            return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}