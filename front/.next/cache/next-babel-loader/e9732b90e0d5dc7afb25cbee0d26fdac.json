{"ast":null,"code":"import { ShrinkOutlined } from \"@ant-design/icons\";\nimport produce from 'immer';\nimport shortId from 'shortid';\nimport faker from \"faker\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'HonestJJ'\n    },\n    content: '첫 번째 게시글',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요~'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const generateDummyPost = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  content: faker.lorem.paragraph(),\n  Images: [{\n    src: faker.image.image()\n  }],\n  Comments: [{\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.sentence()\n  }]\n}));\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: 'HonestJJ'\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: 'HonestJJ'\n  }\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = action.data.concat(draft.mainPosts);\n      draft.hasMorePosts = draft.mainPosts.length < 50;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.mainPosts.unshift(dummyPost(action.data));\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/reducers/post.js"],"names":["ShrinkOutlined","produce","shortId","faker","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","removePostLoading","removePostDone","removePostError","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","generateDummyPost","number","Array","fill","map","name","findName","lorem","paragraph","image","sentence","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","loadPostsLoading","loadPostsDone","loadPostsError","concat","hasMorePosts","length","error","unshift","filter","v","post","find","postId"],"mappings":"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","sourcesContent":["import { ShrinkOutlined } from \"@ant-design/icons\";\nimport produce from 'immer';\nimport shortId from 'shortid';\nimport faker from \"faker\";\n\n\nexport const initialState = {\n    mainPosts: [{\n      id: 1,\n      User: {\n        id: 1,\n        nickname: 'HonestJJ',\n      },\n      content: '첫 번째 게시글',\n      Images: [{\n        id : shortId.generate(),\n        src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n      }, {\n        src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n      }, {\n        src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n      }],\n      Comments: [{\n        id : shortId.generate(),\n        User: {\n          id : shortId.generate(),\n          nickname: 'nero',\n        },\n        content: '우와 개정판이 나왔군요~',\n      }, {\n        id : shortId.generate(), \n        User: {\n          id : shortId.generate(),\n          nickname: 'hero',\n        },\n        content: '얼른 사고싶어요~',\n      }]\n    }],\n    imagePaths: [],\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n}\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const generateDummyPost = (number) => Array(number).fill().map(() => ({\n    id: shortId.generate(),\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName(),\n    },\n    content: faker.lorem.paragraph(),\n    Images: [{\n      src: faker.image.image(),\n    }],\n    Comments: [{\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName(),\n      },\n      content: faker.lorem.sentence(),\n    }],\n  }));\n  \nexport const addPost = (data) => ({\n    type: ADD_POST_REQUEST,\n    data,\n})\n\nexport const addComment = (data) => ({\n    type: ADD_COMMENT_REQUEST,\n    data,\n})\n\nconst dummyPost = (data) => ({\n    id: data.id,\n    content: data.content,\n    User: {\n        id:1,\n        nickname: 'HonestJJ',\n    },\n    Images: [],\n    Comments: [],\n})\n\nconst dummyComment = (data) => ({\n    id : shortId.generate(),\n    content: data,\n    User: {\n        id:1,\n        nickname: 'HonestJJ',\n    },\n})\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}