{"ast":null,"code":"var _jsxFileName = \"/Users/honest/Downloads/\\u1100\\u1162\\u1107\\u1161\\u11AF/7. react-nodebird/prepare/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\n\nconst PostForm = () => {\n  const {\n    addPostDone,\n    addPostLoading\n  } = useSelector(state => state.post);\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const dispatch = useDispatch();\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC27D\\uC9C0 \\uC54A\\uB124,,\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    loading: addPostLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"\\uB808\\uACE0\\uB808\\uACE0\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: v,\n    style: {\n      width: '200px'\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useState","useRef","useEffect","Button","Form","Input","useDispatch","useSelector","addPost","useInput","PostForm","addPostDone","addPostLoading","state","post","imagePaths","text","onChangeText","setText","dispatch","onSubmit","imageInput","onClickImageUpload","current","click","margin","onChangeImages","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\n\n\n\nconst PostForm = () => {\n    const { addPostDone, addPostLoading } = useSelector((state) => state.post)\n    const { imagePaths } = useSelector((state) => state.post)\n    const [text, onChangeText, setText] = useInput('')\n\n    useEffect(() => {\n        if(addPostDone){\n            setText('')\n        }\n    }, [addPostDone])\n\n\n    const dispatch = useDispatch();\n    \n    const onSubmit = useCallback(() => {\n        dispatch(addPost(text))\n    }, [text])\n\n    const imageInput = useRef();\n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n    }, [imageInput.current])\n\n    return (\n        <Form style={{ margin: '10px 0 20px' }} encType='multipart/form-data' onFinish={onSubmit}>\n            <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder='쉽지 않네,,'/>\n            <div>\n                <input type='file' name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages}/>\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>  \n                <Button \n                    type=\"primary\" \n                    style={{ float: 'right' }} \n                    htmlType=\"submit\"\n                    loading={addPostLoading}\n                    >레고레고</Button>\n            </div>\n            <div>\n                {imagePaths.map((v) => (\n                    <div key={v} style={{ display: 'inline-block' }}>\n                        <img src={v} style={{ width: '200px' }} alt={v} />\n                        <div>\n                            <Button>제거</Button>\n                        </div>\n                    </div>\n\n                ))}\n            </div>\n        </Form>\n    )\n}\n\nexport default PostForm"]},"metadata":{},"sourceType":"module"}