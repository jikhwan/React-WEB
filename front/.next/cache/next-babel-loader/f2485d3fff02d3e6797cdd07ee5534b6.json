{"ast":null,"code":"import { all, fork, call, take, put, delay, debounce, throttle, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, ADD_COMMENT_REQUEST } from '../reducers/post';\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    console.log('ADD_COMMENT_SUCCESS', action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE // error: err.response.data,\n\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    console.log('addPost saga');\n    yield delay(1000); // const result = yield call(addPostAPI, action.data)\n\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/honest/Downloads/개발/7. react-nodebird/prepare/front/sagas/post.js"],"names":["all","fork","call","take","put","delay","debounce","throttle","takeLatest","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","ADD_COMMENT_REQUEST","addCommentAPI","data","post","postId","addComment","action","console","log","type","err","addPostAPI","addPost","error","response","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,KAApC,EAA2CC,QAA3C,EAAqDC,QAArD,EAA+DC,UAA/D,QAAgF,oBAAhF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EAA+DC,mBAA/D,EAAoFC,mBAApF,EAAyGC,mBAAzG,QAAoI,kBAApI;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,SAAOR,KAAK,CAACS,IAAN,CAAY,aAAYD,IAAI,CAACE,MAAO,UAApC,EAA+CF,IAA/C,CAAP;AACH;;AAED,UAAUG,UAAV,CAAqBC,MAArB,EAA6B;AACzB,MAAI;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,MAAM,CAACJ,IAAzC;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNoB,MAAAA,IAAI,EAAEV,mBADA;AAENG,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GARD,CAQE,OAAMQ,GAAN,EAAW;AACT,UAAMrB,GAAG,CAAC;AACNoB,MAAAA,IAAI,EAAEX,mBADA,CAEN;;AAFM,KAAD,CAAT;AAIH;AACJ;;AAED,SAASa,UAAT,CAAoBT,IAApB,EAA0B;AACtB,SAAOR,KAAK,CAACS,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUU,OAAV,CAAkBN,MAAlB,EAA0B;AACtB,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,UAAMlB,KAAK,CAAC,IAAD,CAAX,CAFA,CAGA;;AACA,UAAMD,GAAG,CAAC;AACNoB,MAAAA,IAAI,EAAEb,gBADA;AAENM,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GARD,CAQE,OAAMQ,GAAN,EAAW;AACT,UAAMrB,GAAG,CAAC;AACNoB,MAAAA,IAAI,EAAEZ,gBADA;AAENgB,MAAAA,KAAK,EAAEH,GAAG,CAACI,QAAJ,CAAaZ;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUa,YAAV,GAAwB;AACpB,QAAMtB,UAAU,CAACE,gBAAD,EAAmBiB,OAAnB,CAAhB;AACH;;AACD,UAAUI,eAAV,GAA2B;AACvB,QAAMvB,UAAU,CAACO,mBAAD,EAAsBK,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUY,QAAV,GAAqB;AAChC,QAAMhC,GAAG,CAAC,CACNC,IAAI,CAAC6B,YAAD,CADE,EAEN7B,IAAI,CAAC8B,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all, fork, call, take, put, delay, debounce, throttle, takeLatest} from 'redux-saga/effects'\nimport axios from 'axios'\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, ADD_COMMENT_REQUEST } from '../reducers/post'\n\nfunction addCommentAPI(data) {\n    return axios.post(`/api/post/${data.postId}/comment`, data)\n}\n\nfunction* addComment(action) {\n    try {\n        // const result = yield call(addPostAPI, action.data)\n        console.log('ADD_COMMENT_SUCCESS',action.data)\n        yield delay(1000)\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n            data: action.data,\n        });\n    } catch(err) {\n        yield put({\n            type: ADD_COMMENT_FAILURE,\n            // error: err.response.data,\n        })\n    }\n}\n\nfunction addPostAPI(data) {\n    return axios.post('/api/post', data)\n}\n\nfunction* addPost(action) {\n    try {\n        console.log('addPost saga')\n        yield delay(1000)\n        // const result = yield call(addPostAPI, action.data)\n        yield put({\n            type: ADD_POST_SUCCESS,\n            data: action.data,\n        });\n    } catch(err) {\n        yield put({\n            type: ADD_POST_FAILURE,\n            error: err.response.data,\n        })\n    }\n}\n\nfunction* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST, addPost)\n}\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment)\n}\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment),\n    ])\n}"]},"metadata":{},"sourceType":"module"}